* Misc
** 3d scans                                                  :3dscan:redwood:
   http://redwood-data.org/3dscan/
   We have created a dataset of more than ten thousand 3D scans of
   real objects. To create the dataset, we recruited 70 operators,
   equipped them with consumer-grade mobile 3D scanning setups, and
   paid them to scan objects in their environments. The operators
   scanned objects of their choosing, outside the laboratory and
   without direct supervision by computer vision professionals. The
   result is a large and diverse collection of object scans: from
   shoes, mugs, and toys to grand pianos, construction vehicles, and
   large outdoor sculptures. We worked with an attorney to ensure that
   data acquisition did not violate privacy constraints. The acquired
   data was irrevocably placed in the public domain and is available
   freely.
* apt / aptitude
** which packages contains a file?                             :owns:package:
   :source:
   http://askubuntu.com/a/482/204155
   :end:
   You can use dpkg command to find out which package owns a file:

   From man dpkg:
   -S, --search filename-search-pattern...
   Search for a filename from installed packages.

   Example:
   $ dpkg -S /bin/ls
   coreutils: /bin/ls

   You can either search with a full path or with just the filename.
** download the source                                       :package:source:
   apt-get source
** package changelog                                          :apt:changelog:
   apt-get changelog $PACKAGENAME
** install from backports                             :apt:package:backports:
   sudo apt-get install -t trusty-backports $PKGNAME
** file is in which package                                         :autoapt:
   e.g. auto-apt search xpm.h
** dpkg cache
   somewhere in /var/cache/dpkg
** hold a package                                                  :hold:pin:
   sudo apt-mark hold $PACKAGE
* bash
** echo coloured
#+begin_src sh
  red="\033[0;31m"
  green="\033[0;32m"
  yellow="\033[1;33m"

  function echoColour {
      colour=$1
      shift 1

      # Check if stdout is terminal
      if [[ -t 1 ]]; then
          local reset="\033[0m"
          echo -e $colour $@ $reset
      else
          echo $@
      fi
  }
#+end_src
** Pattern expand                                                    :${:
http://wiki.bash-hackers.org/syntax/pe
** Logical or
   https://stackoverflow.com/questions/30843363/aggregate-failure-codes-in-bash
   There's logical `or` of variables with $((foo || bar))
** Shell variables / Special Parameters
   The  shell  treats  several parameters specially.  These parameters may
   only be referenced; assignment to them is not allowed.
*** $*
    Expands to the positional parameters, starting from one. When the
    expansion is not within double quotes, each positional parameter
    expands to a separate word. In contexts where it is performed,
    those words are subject to further word splitting and pathname
    expansion. When the expansion occurs within double quotes, it
    expands to a single word with the value of each parameter
    separated by the first character of the IFS special variable. That
    is, "$*" is equivalent to "$1c$2c...", where c is the first
    character of the value of the IFS variable. If IFS is unset, the
    parameters are separated by spaces. If IFS is null, the parameters
    are joined without intervening separators.
*** $@
    Expands to the positional parameters, starting from  one.   When
    the expansion occurs within double quotes, each parameter expands
    to a separate word. That is, "$@" is equivalent to "$1" "$2" ...
    If the double-quoted expansion occurs within a word, the expansion
    of the first parameter is joined with the beginning part of the
    original word, and the expansion of the last parameter is joined
    with the last part of the original word. When there are no
    positional parameters, "$@" and $@ expand to nothing (i.e., they
    are removed).
*** $#
    Expands to the number of positional parameters in decimal.
*** $?
    Expands to the exit status of the most recently executed
    foreground pipeline.
*** $-
    Expands to the current option flags as specified upon invocation,
    by the set builtin command, or those set by the shell itself (such
    as the -i option).
*** $$
    Expands  to  the  process ID of the shell.  In a () subshell, it
    expands to the process ID of the current shell, not the subshell.
*** $!
    Expands  to  the process ID of the job most recently placed into
    the background, whether executed as an asynchronous command or
    using the bg builtin (see JOB CONTROL below).
*** $0
    Expands  to  the name of the shell or shell script.  This is set
    at shell initialization. If bash is invoked with a file of
    commands, $0 is set to the name of that file. If bash is started
    with the -c option, then $0 is set to the first argument after the
    string to be executed, if one is present. Otherwise, it is set to
    the filename used to invoke bash, as given by argument zero.
*** $_
    At  shell  startup,  set to the absolute pathname used to invoke
    the shell or shell script being executed as passed in the
    environment or argument list. Subsequently, expands to the last
    argument to the previous command, after expansion. Also set to the
    full pathname used to invoke each command executed and placed in
    the environment exported to that command. When checking mail, this
    parameter holds the name of the mail file currently being checked.
** Arithmetic

** History
From http://unix.stackexchange.com/a/67/96718
*** By line
**** Specific item in history
    * !N is the nth item from the start of history, 1 based
    * !-N is the nth item from the end of history, 1 based
**** Repeat last command
    * !! is shorthand for !-1, to quickly substitute the last command
**** Substitute + search
    * !string will substitute the most recent command that begins with string
    * !?string? will substitute the most recent command that contains string
*** By word
    * Word designators can be added on to a ! history command to
      modify the results. A colon separates the event and word
      designators, e.g. !!:0.
    * The event designator !! can be abbreviated to just ! when using
      a word designator, so !!:0 is equivalent to !:0.

**** Specific argument by number
    * !:0 will get the command that was executed
    * !:1 will get the first argument (and !:2 the second, etc.)
    * !:^ is another way to get the first argument. !:$ will get the last
    * !:* will get all arguments (but not the command)
**** Specific argument by range
    * !:2-3 will get the second and third arguments

** Trap
#+BEGIN_SRC sh
function handle_sigint()
{
    for proc in `jobs -p`
    do
        kill $proc
    done
}

trap handle_sigint SIGINT
#+END_SRC
** Force process group
   From http://stackoverflow.com/a/36820679
#+BEGIN_SRC sh
pgid_from_pid() {
    ps -o pgid= "$pid" 2>/dev/null | egrep -o "[0-9]+"
}

pid="$$"
if [ "$pid" != "$(pgid_from_pid $pid)" ]; then
    exec setsid "$(readlink -f "$0")" "$@"
fi
#+END_SRC
* Big Query                                                        :bigquery:
** Table wildcard
#+BEGIN_SRC
SELECT
  speed
FROM (TABLE_QUERY([group:dataset],
                  'table_id CONTAINS "oo" AND length(table_id) >= 4'))
#+END_SRC
**
** Table metatable                                              :query:table:
#+BEGIN_SRC sql
SELECT * FROM [datagroup:dataset.__TABLES_SUMMARY__]
#+END_SRC
* cabal
** Misc useful
  * https://www.haskell.org/cabal/users-guide/developing-packages.html#package-properties
  * https://www.haskell.org/cabal/users-guide/developing-packages.html#configurations
  * https://www.haskell.org/cabal/users-guide/developing-packages.html#library
  * https://www.haskell.org/cabal/users-guide/developing-packages.html#build-information
** Remove a package
#+BEGIN_SRC sh
   ghc-pkg unregister --force $package
#+END_SRC

* Cassandra
** Consistency
#+BEGIN_SRC sh
    cqlsh $HOSTNAME -f <(echo 'use "KEYSPACE"; CONSISTENCY')
#+END_SRC
** Determine topology
#+BEGIN_SRC
    cqlsh pehdka02 -f<(echo 'Use "FlowMonitor"; DESCRIBE KEYSPACE;') | head -n5
#+END_SRC

* chroot
#+BEGIN_SRC sh
  mount /dev/root-partition /mnt/chroot
  mount /dev/home-partition /mnt/chroot/home
  mount /dev/var-partition /mnt/chroot/var
  # These ones are necessary to have a network stack etc
  mount -t proc proc proc/
  mount --rbind /sys sys/
  mount --rbind /dev dev/
  chroot /mnt/chroot
#+END_SRC
* cOreos
* Cannot access external address              :proxy:firewall:coreos:systemd:
   - from https://coreos.com/docs/launching-containers/building/customizing-docker/
   - http_proxy=proxy.example.com docker pull some/image:version12 fails, with i/o timeout
   - This is because http_proxy is set in the docker client, but its the server who pulls
   - Modify the systemd unit file, by adding another one (in cOreos, the default files are mounted r/o)
#+begin_src sh
sudo mkdir /etc/systemd/system/docker.service.d/
cat <<EOF | sudo tee /etc/systemd/system/docker.service.d/http_proxy.conf
[Service]
Environment="HTTPS_PROXY=proxy.example.com"
EOF
sudo systemctl daemon-reload
sudo systemctl restart docker
#+end_src
* Computer Science
** Co & Contra Variance
   Take ⊂ to mean 'subtype of'
*** Covariance
   If B ⊂ B' then (A -> B) ⊂ (A -> B')
*** Contravariance
   If A ⊂ A' then (A' -> B) ⊂ (A -> B')
* CRON
** Is PATH set?
** Are your binaries in scope?
** Is SSH failing?
   If it's an auth problem, try using keychain (from package keychain)
   You can source the keychain script

** View end time
   In /etc/default/cron:
   EXTRA_OPTS="-L 2"
   # Info in man cron
* cURL
  curl -w '%{http_code} %{time_total}' http://www.google.com
* Databases
** Oracle
*** limit :SQL:
    where rownum <= 10
* Docker
** #: no such file or directory
   * This is cause by having a comment on the same line as ADD
   * The comment is not parsed by docker as a comment
   * so ONBUILD ADD foo # this isn't really a comment
   * It is treated as an attempt to add the following files
       foo
       #
       this
       isn't
       really
       a
       comment
** delete all images
   docker images | awk '{print $3}' | xargs docker rmi
** delete all containers
** host name cannot be resolved :dns:host:hostname:resolvconf:
   * If host's resolv.conf is set to use 127.0.0.1 (as it will when
     using network manager), docker will fallback to 8.8.8.8 / 8.8.4.4
   * Fix this by setting a DNS server with ~sudo -e /etc/default/docker~
** wierd permission problems
   Could be a fuckup with devmapper, try using aufs, see aufs entry
** using aufs
   sudo apt-get install linux-image-extra-virtual
   sudo modprobe aufs
   sudo -e /etc/default/docker # add "--storage-driver=aufs" to DOCKER_OPTS
   sudo service docker restart
* DNS
  * DNS file is called /etc/resolv.conf
* Emacs
** new major modes
   http://wilfred.me.uk/blog/2015/03/19/adding-a-new-language-to-emacs
** zoom characters
*** Out
C-x C--
*** In
C-x C-=
** TRAMP
   /host:file
   /method:user@host:file
   /user@host|sudo:host:file
   /su::file
** Query in Macros
   C-x C-k q asks if you want to carry on
   C-u C-x C-k q
* Filesystem
** Labelling
*** ext
#+BEGIN_SRC sh
  e2label /dev/sdbX LABEL
#+END_SRC
*** btrfs
#+BEGIN_SRC sh
  btrfs filesystem label /MOUNTPOINT LABEL
#+END_SRC
* GHC
** Member of hidden package                             :ghc:package:haskell:
   Could not find module
   It is a member of the hidden package
   Use -v to see a list of the files searched for.
   From https://stackoverflow.com/questions/26145383/ghc-package-is-hidden
   sudo ghc-pkg expose $PKGNAME
** Ambiguous package                           :ghc:ghci:ambiguouspackage:haskell:
   * In ghci, you can use
     :set -hide-package mtl
   * In a source file, use
#+BEGIN_SRC haskell
{-# LANGUAGE PackageImports #-}
import "mtl" Control.Monad.State
#+END_SRC
* Git
** Finding deleted files
   git log --diff-filter=D --summary | grep java
** show old files
   * Note that if file was deleted by commit X, you have to do git show X~1:$FILE
   git show $REV:$FILE
** lost a commit with a rebase                    :lost:delete:rebase:reflog:
   look in the reflog for the commit message of the lost commit - you
   can checkout its hash
** merge other branch in using theirs                          :merge:theirs:
#+BEGIN_SRC sh
git merge -X theirs
#+END_SRC
   This isn't a merge strategy, its an option for the ~recursive~ merge strategy
** ignore certificate errors                      :ssl:git:git_ssl_no_verify:
*** For a single command
#+BEGIN_SRC sh
   env GIT_SSL_NO_VERIFY=true git clone https://git.example.com
#+END_SRC
*** For a single repo
#+BEGIN_SRC sh
   git config http.sslVerify "false"
#+END_SRC

* Google compute engine
** SSH Keys :ssh:cloud:google:
   * Go to projects web page
   * Select instance name
   * C-f SSH Keys
   * Insert your pubkeys
* Gnuplot
** Terminal type set to unknown :x11:
#+BEGIN_SRC sh
   sudo apt install gnuplot-x11
#+END_SRC
* Haskell
** Language Pragma
#+BEGIN_SRC haskell
   {-# LANGUAGE _PRAGMA_ #-}
#+END_SRC
** Monomorphism Restriction
   :set -XNoMonomorphismRestriction
   {-# LANGUAGE NoMonomorphismRestriction #-}
* HTTP
** HTTP Flow Chart
   [[https://camo.githubusercontent.com/4e15cccf2a9277dcca2c8824092547dee7058744/68747470733a2f2f7261776769746875622e636f6d2f666f722d4745542f687474702d6465636973696f6e2d6469616772616d2f6d61737465722f6874747064642e706e67][Found here]]
** HTTP Response Codes
   Nicked from wikipedia, converted with pandoc
-  200 OK :: Standard response for successful HTTP requests. The actual
   response will depend on the request method used. In a GET request,
   the response will contain an entity corresponding to the requested
   resource. In a POST request, the response will contain an entity
   describing or containing the result of the action. [1]
-  201 Created :: The request has been fulfilled and resulted in a new
   resource being created. [2]
-  202 Accepted :: The request has been accepted for processing, but the
   processing has not been completed. The request might or might not
   eventually be acted upon, as it might be disallowed when processing
   actually takes place. [3]
-  203 Non-Authoritative Information (since HTTP/1.1) :: The server
   successfully processed the request, but is returning information that
   may be from another source. [4]
-  204 No Content :: The server successfully processed the request, but
   is not returning any content. [5]
-  205 Reset Content :: The server successfully processed the request,
   but is not returning any content. Unlike a 204 response, this
   response requires that the requester reset the document view. [6]
-  206 Partial Content (RFC 7233) :: The server is delivering only part
   of the resource ([[byte_serving][byte serving]]) due to a range
   header sent by the client. The range header is used by HTTP clients
   to enable resuming of interrupted downloads, or split a download into
   multiple simultaneous streams. [7]
-  207 Multi-Status (WebDAV; RFC 4918) :: The message body that follows
   is an [[XML]] message and can contain a number of separate response
   codes, depending on how many sub-requests were made. [8]
-  208 Already Reported (WebDAV; RFC 5842) :: The members of a DAV
   binding have already been enumerated in a previous reply to this
   request, and are not being included again. [9]
-  226 IM Used (RFC 3229) :: The server has fulfilled a request for the
   resource, and the response is a representation of the result of one
   or more instance-manipulations applied to the current instance. [10]

*** 3xx Redirection

This class of status code indicates the client must take additional
action to complete the request. Many of these status codes are used in
[[URL_redirection][URL redirection]]. [11]

A user agent may carry out the additional action with no user
interaction only if the method used in the second request is GET or
HEAD. A user agent should not automatically redirect a request more than
five times, since such redirections usually indicate an
[[infinite_loop][infinite loop]]. [12]

-  300 Multiple Choices :: Indicates multiple options for the resource
   that the client may follow. It, for instance, could be used to
   present different format options for video, list files with different
   [[file_extensions][extensions]], or [[word_sense_disambiguation][word
   sense disambiguation]]. [13]
-  [[HTTP_301][301 Moved Permanently]] :: This and all future requests
   should be directed to the given
   [[Uniform_resource_identifier][URI]]. [14]
-  [[HTTP_302][302 Found]] :: This is an example of industry practice
   contradicting the standard. The HTTP/1.0 specification (RFC 1945)
   required the client to perform a temporary redirect (the original
   describing phrase was "Moved Temporarily"), [15] but popular browsers
   implemented 302 with the functionality of a 303 See Other. Therefore,
   HTTP/1.1 added status codes 303 and 307 to distinguish between the
   two behaviours. [16] However, some Web applications and frameworks
   use the 302 status code as if it were the 303. [17]
-  [[HTTP_303][303 See Other]] (since HTTP/1.1) :: The response to the
   request can be found under another
   [[Uniform_Resource_Identifier][URI]] using a GET method. When
   received in response to a POST (or PUT/DELETE), it should be assumed
   that the server has received the data and the redirect should be
   issued with a separate GET message. [18]
-  304 Not Modified (RFC 7232) :: Indicates that the resource has not
   been modified since the version specified by the
   [[List_of_HTTP_header_fields#Request_Headers][request headers]]
   If-Modified-Since or If-None-Match. This means that there is no need
   to retransmit the resource, since the client still has a
   previously-downloaded copy. [19]
-  305 Use Proxy (since HTTP/1.1) :: The requested resource is only
   available through a proxy, whose address is provided in the response.
   Many HTTP clients (such as [[Mozilla]] [20] and
   [[Internet_Explorer][Internet Explorer]]) do not correctly handle
   responses with this status code, primarily for security reasons. [21]
-  306 Switch Proxy :: No longer used. Originally meant "Subsequent
   requests should use the specified proxy." [22]
-  307 Temporary Redirect (since HTTP/1.1) :: In this case, the request
   should be repeated with another URI; however, future requests should
   still use the original URI. In contrast to how 302 was historically
   implemented, the request method is not allowed to be changed when
   reissuing the original request. For instance, a POST request should
   be repeated using another POST request. [23]
-  308 Permanent Redirect (RFC 7538) :: The request, and all future
   requests should be repeated using another URI. 307 and 308 (as
   proposed) parallel the behaviours of 302 and 301, but /do not allow
   the HTTP method to change/. So, for example, submitting a form to a
   permanently redirected resource may continue smoothly. [24]
-  308 Resume Incomplete (Google) :: This code is used in the Resumable
   HTTP Requests Proposal to resume aborted PUT or POST requests. This
   is not a standard code in HTTP 1.1, and is superseded by "Permanent
    Redirect" in HTTP 2.

*** 4xx Client Error

[[404 error sample.png]] The 4xx class of status code is intended for
cases in which the client seems to have erred. Except when responding to
a HEAD request, the server /should/ include an entity containing an
explanation of the error situation, and whether it is a temporary or
permanent condition. These status codes are applicable to any request
method. User agents /should/ display any included entity to the
user. [26]

-  400 Bad Request :: The server cannot or will not process the request
   due to something that is perceived to be a client error (e.g.,
   malformed request syntax, invalid request message framing, or
   deceptive request routing). [27]
-  401 Unauthorized (RFC 7235) :: Similar to /403 Forbidden/, but
   specifically for use when authentication is required and has failed
   or has not yet been provided. The response must include a
   WWW-Authenticate header field containing a challenge applicable to
   the requested resource. See [[Basic_access_authentication][Basic
   access authentication]] and [[Digest_access_authentication][Digest
   access authentication]]. [28] 401 semantically means
   [[Authentication]["unauthenticated"]], i.e. "you don't have necessary
   credentials".
-  402 Payment Required :: Reserved for future use. The original
   intention was that this code might be used as part of some form of
   [[digital_cash][digital cash]] or [[micropayment]] scheme, but that
   has not happened, and this code is not usually used.
   [[Google_Developers][Google Developers]] API uses this status if a
   particular developer has exceeded the daily limit on requests.

-  [[HTTP_403][403 Forbidden]] :: The request was a valid request, but
   the server is refusing to respond to it. Unlike a /401 Unauthorized/
   response, authenticating will make no difference. [29] 403 error
   semantically means [[Authorization]["unauthorized"]], i.e. "you don't
   have necessary permissions for the resource".
-  [[HTTP_404][404 Not Found]] :: The requested resource could not be
   found but may be available again in the future. Subsequent requests
   by the client are permissible. [30]
-  405 Method Not Allowed :: A request was made of a resource using a
   request method not supported by that resource; for example, using GET
   on a form which requires data to be presented via
   [[POST_(HTTP)][POST]], or using PUT on a read-only resource.
-  406 Not Acceptable :: The requested resource is only capable of
   generating content not acceptable according to the Accept headers
   sent in the request. [31]
-  407 Proxy Authentication Required (RFC 7235) :: The client must first
   authenticate itself with the [[Proxy_server][proxy]]. [32]
-  408 Request Timeout :: The server timed out waiting for the request.
   According to HTTP specifications: "The client did not produce a
   request within the time that the server was prepared to wait. The
   client MAY repeat the request without modifications at any later
   time." [33]
-  409 Conflict :: Indicates that the request could not be processed
   because of conflict in the request, such as an [[edit_conflict][edit
   conflict]] in the case of multiple updates. [34]
-  410 Gone :: Indicates that the resource requested is no longer
   available and will not be available again. This should be used when a
   resource has been intentionally removed and the resource should be
   purged. Upon receiving a 410 status code, the client should not
   request the resource again in the future. Clients such as search
   engines should remove the resource from their indices.

 Most use cases do not require clients and search engines to purge the
resource, and a "404 Not Found" may be used instead.

-  411 Length Required :: The request did not specify the length of its
   content, which is required by the requested resource. [35]
-  412 Precondition Failed (RFC 7232) :: The server does not meet one of
   the preconditions that the requester put on the request. [36]
-  413 Payload Too Large (RFC 7231) :: The request is larger than the
   server is willing or able to process. Called "Request Entity Too
   Large" previously. [37]
-  414 URI Too Long (RFC 7231) :: The [[URI]] provided was too long for
   the server to process. Often the result of too much data being
   encoded as a query-string of a GET request, in which case it should
   be converted to a POST request. [38] Called "Request-URI Too Long"
   previously. [39]
-  415 Unsupported Media Type :: The request entity has a
   [[Internet_media_type][media type]] which the server or resource does
   not support. For example, the client uploads an image as
   [[Scalable_Vector_Graphics][image/svg+xml]], but the server requires
   that images use a different format.
-  416 Range Not Satisfiable (RFC 7233) :: The client has asked for a
   portion of the file ([[byte_serving][byte serving]]), but the server
   cannot supply that portion. For example, if the client asked for a
   part of the file that lies beyond the end of the file. [40] Called
   "Requested Range Not Satisfiable" previously. [41]
-  417 Expectation Failed :: The server cannot meet the requirements of
   the Expect request-header field. [42]

-  418 I'm a teapot (RFC 2324) :: This code was defined in 1998 as one
   of the traditional [[Internet_Engineering_Task_Force][IETF]]
   [[April_Fools'_Day_RFC][April Fools' jokes]], in RFC 2324,
   /[[Hyper_Text_Coffee_Pot_Control_Protocol][Hyper Text Coffee Pot
   Control Protocol]]/, and is not expected to be implemented by actual
   HTTP servers. The RFC specifies this code should be returned by tea
   pots requested to brew coffee. [43] This HTTP status is used as an
   [[easter_egg_(media)][easter egg]] in some websites, including
   [[Google.com]]. [44]
-  419 Authentication Timeout (not in RFC 2616) :: Not a part of the
   HTTP standard, 419 Authentication Timeout denotes that previously
   valid authentication has expired. It is used as an alternative to 401
   Unauthorized in order to differentiate from otherwise authenticated
   clients being denied access to specific server resources. [45]
-  420 Method Failure ([[Spring_Framework][Spring Framework]]) :: Not
   part of the HTTP standard, but defined by Spring in the HttpStatus
   class to be used when a method failed. This status code is deprecated
   by Spring. [46]
-  420 Enhance Your Calm ([[Twitter]]) :: Not part of the HTTP standard,
   but returned by version 1 of the Twitter Search and Trends API when
   the client is being rate limited. [47] Other services may wish to
   implement the [[#429][429 Too Many Requests]] response code instead.
-  421 Misdirected Request (RFC 7540) :: The request was directed at a
   server that is not able to produce a response (for example because a
   connection reuse). [48]
-  422 Unprocessable Entity (WebDAV; RFC 4918) :: The request was
   well-formed but was unable to be followed due to semantic
   errors. [49]
-  423 Locked (WebDAV; RFC 4918) :: The resource that is being accessed
   is locked. [50]
-  424 Failed Dependency (WebDAV; RFC 4918) :: The request failed due to
   failure of a previous request (e.g., a PROPPATCH). [51]
-  \\
   426 Upgrade Required :: The client should switch to a different
   protocol such as [[Transport_Layer_Security][TLS/1.0]], given in the
   [[Upgrade_header][Upgrade header]] field. [52]
-  \\
   428 Precondition Required (RFC 6585) :: The origin server requires
   the request to be conditional. Intended to prevent "the 'lost update'
   problem, where a client GETs a resource's state, modifies it, and
   PUTs it back to the server, when meanwhile a third party has modified
   the state on the server, leading to a conflict." [53]
-  \\
   429 Too Many Requests (RFC 6585) :: The user has sent too many
   requests in a given amount of time. Intended for use with
   [[rate_limiting][rate limiting]] schemes. [54]
-  \\
   431 Request Header Fields Too Large (RFC 6585) :: The server is
   unwilling to process the request because either an individual header
   field, or all the header fields collectively, are too large. [55]
-  \\
   440 Login Timeout (Microsoft) :: A Microsoft extension. Indicates
   that your session has expired.

-  \\
   444 No Response (Nginx) :: Used in [[Nginx]] logs to indicate that
   the server has returned no information to the client and closed the
   connection (useful as a deterrent for malware). [56]
-  \\
   449 Retry With (Microsoft) :: A Microsoft extension. The request
   should be retried after performing the appropriate action. [57]
-  450 Blocked by Windows Parental Controls (Microsoft) :: A Microsoft
   extension. This error is given when Windows Parental Controls are
   turned on and are blocking access to the given webpage. [58]
-  [[HTTP_451][451 Unavailable For Legal Reasons]] (Internet
   draft) :: Defined in the internet draft "A New HTTP Status Code for
   Legally-restricted Resources". [59] Intended to be used when resource
   access is denied for legal reasons, /e.g./ censorship or
   government-mandated blocked access. A reference to the 1953
   [[dystopia][dystopian]] novel /[[Fahrenheit_451][Fahrenheit 451]]/,
   where books are outlawed. [60]
-  451 Redirect (Microsoft) :: Used in [[Exchange_ActiveSync][Exchange
   ActiveSync]] if there either is a more efficient server to use or the
   server cannot access the users' mailbox. [61]
   The client is supposed to re-run the HTTP Autodiscovery protocol to
   find a better suited server. [62]
-  494 Request Header Too Large (Nginx) :: [[Nginx]] internal code
   similar to 431 but it was introduced earlier in version 0.9.4 (on
   January 21, 2011). [63]
-  495 Cert Error (Nginx) :: [[Nginx]] internal code used when
   [[Transport_Layer_Security][SSL]] [[client_certificate][client
   certificate]] error occurred to distinguish it from 4XX in a log and
   an error page redirection. [64]
-  496 No Cert (Nginx) :: [[Nginx]] internal code used when client
   didn't provide certificate to distinguish it from 4XX in a log and an
   error page redirection. [65]
-  497 HTTP to HTTPS (Nginx) :: [[Nginx]] internal code used for the
   plain HTTP requests that are sent to HTTPS port to distinguish it
   from 4XX in a log and an error page redirection. [66]
-  498 Token expired/invalid (Esri) :: Returned by
   [[ArcGIS_Server][ArcGIS for Server]]. A code of 498 indicates an
   expired or otherwise invalid token. [67]
-  499 Client Closed Request (Nginx) :: Used in [[Nginx]] logs to
   indicate when the connection has been closed by client while the
   server is still processing its request, making server unable to send
   a status code back. [68]
-  499 Token required (Esri) :: Returned by [[ArcGIS_Server][ArcGIS for
   Server]]. A code of 499 indicates that a token is required (if no
   token was submitted). [69]

*** 5xx Server Error

The server failed to fulfill an apparently valid request. [70]

Response status codes beginning with the digit "5" indicate cases in
which the server is aware that it has encountered an error or is
otherwise incapable of performing the request. Except when responding to
a HEAD request, the server /should/ include an entity containing an
explanation of the error situation, and indicate whether it is a
temporary or permanent condition. Likewise, user agents /should/ display
any included entity to the user. These response codes are applicable to
any request method. [71]

-  500 Internal Server Error :: A generic error message, given when an
   unexpected condition was encountered and no more specific message is
   suitable. [72]
-  501 Not Implemented :: The server either does not recognize the
   request method, or it lacks the ability to fulfill the request.
   Usually this implies future availability (e.g., a new feature of a
   web-service API). [73]
-  502 Bad Gateway :: The server was acting as a
   [[gateway_(telecommunications)][gateway]] or proxy and received an
   invalid response from the upstream server. [74]
-  503 Service Unavailable :: The server is currently unavailable
   (because it is overloaded or down for maintenance). Generally, this
   is a temporary state. [75]
-  504 Gateway Timeout :: The server was acting as a gateway or proxy
   and did not receive a timely response from the upstream server. [76]
-  505 HTTP Version Not Supported :: The server does not support the
   HTTP protocol version used in the request. [77]
-  506 Variant Also Negotiates (RFC 2295) :: Transparent
   [[content_negotiation][content negotiation]] for the request results
   in a [[circular_reference][circular reference]]. [78]
-  507 Insufficient Storage (WebDAV; RFC 4918) :: The server is unable
   to store the representation needed to complete the request. [79]
-  508 Loop Detected (WebDAV; RFC 5842) :: The server detected an
   infinite loop while processing the request (sent in lieu of
   [[#208][208 Already Reported]]).
-  509 Bandwidth Limit Exceeded (Apache bw/limited
   extension) [80] :: This status code is not specified in any RFCs. Its
   use is unknown.
-  510 Not Extended (RFC 2774) :: Further extensions to the request are
   required for the server to fulfil it. [81]
-  511 Network Authentication Required (RFC 6585) :: The client needs to
   authenticate to gain network access. Intended for use by intercepting
   proxies used to control access to the network (e.g.,
   "[[captive_portal][captive portals]]" used to require agreement to
   Terms of Service before granting full Internet access via a
   [[Hotspot_(Wi-Fi)][Wi-Fi hotspot]]). [82]
-  520 Unknown Error :: This status code is not specified in any RFC and
   is returned by certain services, for instance
   [[Microsoft_Azure][Microsoft Azure]] and [[CloudFlare]] servers: "The
   520 error is essentially a “catch-all” response for when the origin
   server returns something unexpected or something that is not
   tolerated/interpreted (protocol violation or empty response)." [83]
-  522 Origin Connection Time-out :: This status code is not specified
   in any RFCs, but is used by CloudFlare's reverse proxies to signal
   that a server connection timed out.
-  598 Network read timeout error (Unknown) :: This status code is not
   specified in any RFCs, but is used by Microsoft HTTP proxies to
   signal a network read timeout behind the proxy to a client in front
   of the proxy. [84]
-  599 Network connect timeout error (Unknown) :: This status code is
   not specified in any RFCs, but is used by Microsoft HTTP proxies to
   signal a network connect timeout behind the proxy to a client in
   front of the proxy. [85]

[1]

[2]

[3]

[4]

[5]

[6]

[7]

[8]

[9]

[10]

[11]

[12]

[13]

[14]

[15]

[16]

[17]

[18]

[19]

[20]

[21]

[22]

[23]

[24]

[25]

[26]

[27]

[28]

[29]

[30]

[31]

[32]

[33]

[34]

[35]

[36]

[37]

[38]

[39]

[40]

[41]

[42]

[43]

[44]

[45]

[46]

[47]

[48]

[49]

[50]

[51]

[52]

[53]

[54]

[55]

[56]

[57]

[58]

[59]

[60]

[61]

[62]

[63]

[64]

[65]

[66]

[67]

[68]

[69]

[70]

[71]

[72]

[73]

[74]

[75]

[76]

[77]

[78]

[79]

[80]

[81]

[82]

[83]

[84]

[85]

** HTTP Headers
*** Application Json header                     :content:json:header:xc:curl:
    Content-Type: application/json
* Java
** binary compatability :compatibility:
   From: https://docs.oracle.com/javase/specs/jls/se7/html/jls-13.html
   Here is a list of some important binary compatible changes that the Java programming language supports:

   - Reimplementing existing methods, constructors, and initializers
     to improve performance.
   - Changing methods or constructors to return values on inputs for
     which they viously either threw exceptions that normally
     should not occur or failed by going into an infinite loop or
     causing a deadlock.
   - Adding new fields, methods, or constructors to an existing class
     or interface.
   - Deleting private fields, methods, or constructors of a class.
   - When an entire package is updated, deleting default
     (package-only) access fields, methods, or constructors of classes
     and interfaces in the package.
   - Reordering the fields, methods, or constructors in an existing
     type declaration.
   - Moving a method upward in the class hierarchy.
   - Reordering the list of direct superinterfaces of a class or
     interface.
   - Inserting new class or interface types in the type hierarchy.
** Printing byte array :hex:byte:array:
   ~def valueOf(buf: Array[Byte]): String = buf.map("%02X" format _).mkString~
** update-alternatives :version:updatealternatives:
   sudo update-alternatives --config java
** invalid target release: 1.8 :version:
   JDK_HOME and JAVA_HOME aren't set to the correct version
** classpath
   * What a bunch of wank
   * Can't use -cp and -jar in the same argument
     * Instead, java -jar 'MyJar.jar:libs/*' main.Main
   * Asterisk has to be quoted - the JVM unpacks lib/* itself
** heap stack size :xmx:
-Xms<size>        set initial Java heap size
-Xmx<size>        set maximum Java heap size
-Xss<size>        set java thread stack size

java -Xms16m -Xmx64m ClassName
** Changing JVMs
#+BEGIN_SRC sh
   sudo update-java-alternatives -s java-n-oracle
#+END_SRC
** installing oracle jvm with apt
#+BEGIN_SRC sh
sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections
sudo apt-get install oracle-java8-installer
#+END_SRC
** keystore                                 :keystore:password:query:keytool:
   default is /usr/lib/jvm/java-8-oracle/jre/lib/security/cacerts
   query it with keytool -list -keystore /usr/lib/jvm/java-8-oracle/jre/lib/security/cacerts -storepass 'changeit'
* Javascript
** Ordering :compare:objects:
   * Objects are always LT each other
** Sorting :sort:
   * Custom comparators should return {-1,0,1}
   * Firefox accepts bools, chrome *does not*
   * In practice, < 0, == 0, and > 0 work fine
* Kernel
  https://www.kernel.org/doc/Documentation/  :documentation:kernel:
* Linux Groups
** Add user to a group
You'll need to relog or run ~newgrp docker~ instead
#+BEGIN_SRC sh
  sudo usermod $USER --append --groups $GROUP
#+END_SRC
** Relog as your groups
   newgrp $GROUP
* Node
** Express :: Lightweight Web Server                             :web:server:javascript:
  Express - https://expressjs.com/
#+BEGIN_SRC javascript
const app = require('express')()
app.get('/', (req, res) => res.json({hello: 'world'}))
app.listen(8080, () => console.log('server listening on http://0.0.0.0:8080'))
#+END_SRC
*** Installing
    Assuming you’ve already installed Node.js, create a directory to
    hold your application, and make that your working directory.

    $ mkdir myapp
    $ cd myapp

    Use the npm init command to create a package.json file for your
    application. For more information on how package.json works, see
    Specifics of npm’s package.json handling.

    $ npm init

    This command prompts you for a number of things, such as the name
    and version of your application. For now, you can simply hit
    RETURN to accept the defaults for most of them, with the following
    exception:

    entry point: (index.js)

    Enter app.js, or whatever you want the name of the main file to
    be. If you want it to be index.js, hit RETURN to accept the
    suggested default file name.

    Now install Express in the app directory and save it in the
    dependencies list. For example:

    $ npm install express --save

    To install Express temporarily and not add it to the dependencies
    list, omit the --save option:

    $ npm install express

    Node modules installed with the --save option are added to the
    dependencies list in the package.json file. Afterwards, running
    npm install in the app directory will automatically install
    modules in the dependencies list.

* Machine Learning
  https://colah.github.io/
* Maths
** "Tricks" for solving problems
   http://www.tricki.org/tricki/map
* Mesos
** Container not started ?
   /Container.*?for executor.*?of framework.*?failed to start/
* Mount
** Lazy unmount
   umount -l
* magicsysrq
  * Configure it in /etc/sysctl.d/10-magic-sysrq.conf

  | Set the console log level, which controls the types of kernel messages that are output to the console                                                                                | 0 through 9 | 0 through 9 | 0 through 9 |   |
  | (without using shift)                                                                                                                                                                | 0 through 9 |             |             |   |
  | Immediately reboot the system, without unmounting or syncing filesystems                                                                                                             | b           | x           | b           | b |
  | Perform a system crash. A crashdump will be taken if it is configured.                                                                                                               | c           | j           | c           | c |
  | Display all currently held Locks (CONFIG_LOCKDEP kernel option is required)                                                                                                          | d           | e           | d           | s |
  | Send the SIGTERM signal to all processes except init (PID 1)                                                                                                                         | e           | .           | e           | f |
  | Call oom_kill, which kills a process to alleviate an OOM condition                                                                                                                   | f           | u           | f           | t |
  | When using Kernel Mode Setting, provides emergency support for switching back to the kernel's framebuffer console[3] If the in-kernel debugger 'kdb' is present, enter the debugger. | g           | i           | g           | d |
  | Output a terse help document to the console                                                                                                                                          |             |             |             |   |
  | Any key which is not bound to a command should also perform this action                                                                                                              | h           | d           | h           | h |
  | Send the SIGKILL signal to all processes except init                                                                                                                                 | i           | c           | i           | u |
  | Forcibly "Just thaw it" – filesystems frozen by the FIFREEZE ioctl.                                                                                                                  | j           | h           | j           | n |
  | Kill all processes on the current virtual console (can kill X and svgalib programs, see below)                                                                                       |             |             |             |   |
  | This was originally designed to imitate a secure attention key                                                                                                                       | k           | t           | k           | e |
  | Shows a stack backtrace for all active CPUs.                                                                                                                                         | l           | n           | l           | i |
  | Output current memory information to the console                                                                                                                                     | m           | m           | ,           | m |
  | Reset the nice level of all high-priority and real-time tasks                                                                                                                        | n           | b           | n           | k |
  | Shut off the system                                                                                                                                                                  | o           | r           | o           | y |
  | Output the current registers and flags to the console                                                                                                                                | p           | l           | p           | ; |
  | Display all active high-resolution timers and clock sources.                                                                                                                         | q           | '           | a           | q |
  | Switch the keyboard from raw mode, the mode used by programs such as X11 and svgalib, to XLATE mode                                                                                  | r           | p           | r           | p |
  | Sync all mounted filesystems                                                                                                                                                         | s           | o           | s           | r |
  | Output a list of current tasks and their information to the console                                                                                                                  | t           | y           | t           | g |
  | Remount all mounted filesystems in read-only mode                                                                                                                                    | u           | g           | u           | l |
  | Forcefully restores framebuffer console, except for ARM processors, where this key causes ETM buffer dump                                                                            | v           | k           | v           | v |
  | Display list of blocked (D state) tasks                                                                                                                                              | w           | ,           | z           | w |
  | Used by xmon interface on PPC/PowerPC platforms.                                                                                                                                     | x           | q           | x           | x |
  | Show global CPU registers (SPARC-64 specific)                                                                                                                                        | y           | f           | y           | j |
  | Dump the ftrace buffer                                                                                                                                                               | z           | ;           | w           | z |

* Org
  Lots of details [[http://orgmode.org/manual/Structural-markup-elements.html#Structural-markup-elements][here]]
** Adding a title
   #+BEGIN_EXAMPLE
   #+TITLE: THIS IS MY TITLE
   #+END_EXAMPLE
** Babel block details
   http://orgmode.org/worg/org-contrib/babel/intro.html
** Remove table of contents                                     :toc:heading:
   #+BEGIN_EXAMPLE
   #+OPTIONS: toc:nil        no default TOC at all
   #+END_EXAMPLE
* Perl
** Flags
  - -l makes each print statement output a record separator that is
    the same as input record separator (newline by default).
  - -Fpattern is used to specify input field separator, much like
    awk's -F option.
  - -a turns on the autosplit mode, so input fields are placed into ~@F~
    array.
  - -e is expression
  - -n wraps the expression inside a while loop that places each input
    line into $_ and evaluate the expression.
  - -p (replaces -n) wraps the expression inside a while loop, placing
    each input line into ~$_~, evaluate the expression which manipulates
    ~$_~, and prints ~$_~, the result.

* PDFs
** Concatenate
   Package :: poppler-utils
   Binary :: pdfunite
   *warning* will always use last pdf as output
   #+BEGIN_EXAMPLE
   pdfunite in1.pdf in2.pdf in3.pdf out.pdf
   #+END_EXAMPLE
* Profiling
** R
install.packages("devtools")
devtools::install_github("hadley/lineprof")
* Python
** Flask :: Lightweight Web Server                               :web:server:
   Flask - http://flask.pocoo.org/docs/0.10/
#+BEGIN_SRC python
from flask import Flask
app = Flask(__name__)

@app.route("/")
def hello():
    return "Hello World!"

if __name__ == "__main__":
    app.run()
    # app.run(debug=True)
#+END_SRC
** Command line arguments
argparse
** Dictionary union
   dict(y, **x) # prefers the RHS
** Using Strings when a function wants files :string:files:stringio:string:io:
   Using stringio
** Binary version of stringio
#+BEGIN_SRC python
from io import BytesIO
bio = BytesIO(b"some initial binary data: \x00\x01")
#+END_SRC
** Directory of script
   __file__ contains the filename of a python script (undefined in interactive mode)
   hence
#+BEGIN_SRC python
import os
dir = os.path.dirname(__file__)
filename = os.path.join(dir, '/relative/path/to/file/you/want')
#+END_SRC
** Running the python debugger
   It's called pdb
   https://docs.python.org/2/library/pdb.html
*** Running pdb on a script
#+BEGIN_SRC sh
python -m pdb script.py
#+END_SRC
*** Hard coding a breakpoint
    [[file:~/.emacs.d/init.el::(define-key%20python-mode-map][Bound to c-c c-d here]]
#+BEGIN_SRC python
import pdb; pdb.set_trace()
#+END_SRC
*** Inspecting locals
#+BEGIN_SRC python
locals()['variable_name']
#+END_SRC
** Profiling
   From https://docs.python.org/3/library/profile.html
#+BEGIN_SRC sh
python -m cProfile [-o output_file] [-s sort_order] myscript.py
#+END_SRC

-o writes the profile results to a file instead of to stdout

-s specifies one of the sort_stats() sort values to sort the output by. This only applies when -o is not supplied.
*** Viewing binary output of cprofile                :cprofile:out:viewer:
An in-browser viewer for the output of cprofile
#+BEGIN_SRC sh
  pip install --user cprofilev
#+END_SRC
** Pretty print object                                :print:pretty:show:str:
   Defining the str magic method for printing nicely
#+BEGIN_SRC python
def __str__(self):
        attrs = vars(self)
        return ', '.join("%s: %s" % item for item in attrs.items())
#+END_SRC
* R
** command line arguments
   https://stackoverflow.com/questions/2151212/how-can-i-read-command-line-parameters-from-an-r-script
#+BEGIN_SRC R
   # trailingOnly=TRUE means that only your arguments are returned (not arguments to R runtime)
   args <- commandArgs(trailingOnly = TRUE)
#+END_SRC
** ggplot
*** Smoothing
#+BEGIN_SRC R
   ggplot(data=m,aes(x=time,y=used)) + geom_point() + geom_smooth(method=lm)
#+END_SRC
*** Labelling by transform
    ???
** Run file as script
   Rscript
** Rename factors
   #+BEGIN_SRC R
      as.factor(unlist(lapply(frame$factor, function(f) { tickle(f) } )))
   #+END_SRC
* Rabbit MQ
** NO ROUTE                                                :noroute:no_route:
Missing 312 ("No route") channel exception

Section 1.2 ought to define an exception 312 "No route", which used to
exist in 0-9 and is what RabbitMQ sends back with 'basic.return' when
a 'mandatory' message cannot be delivered to any queue.
** No web interface                                         :interface:15672:
   rabbitmq-plugins enable rabbitmq-management

* Readline
** Set to emacs mode
   set -o emacs
* Ruby
** One-liners
   http://benoithamelin.tumblr.com/ruby1line
** Pry                                                            :ruby:repl:
   gem install pry
** Sinatra :: Lightweight Web Server                             :web:server:
   Sinatra - http://www.sinatrarb.com/
#+BEGIN_SRC ruby
require 'sinatra'

get '/hi' do
  "Hello World!"
end
#+END_SRC

* sbt
** Literally anything
   * Upgrade SBT
** run a specific test     :sbt:test:
   from http://stackoverflow.com/a/22490924/215924
   As of ScalaTest 2.1.3
   ~sbt 'testOnly *TestName' ~ or ~sbt 'testOnly com.acme.example.package.TestName' ~
   to run only the tests whose name includes the substring "foo".
   For exact match rather than substring, use -t instead of -z.

* screencast
** byzanz :gif:
   apt-get install byzanz
   byzanz-record --help
   byzanz-record /tmp/out.gif
* SSH
** Kill locked session                                    :frozen:ssh:locked:
To disconnect a locked-up ssh session, type ~.
A full list of escape codes can be found in the ssh manpage or by typing ~?.

* strace
** Could not attach to process
   Could not attach to process. If your uid matches the uid of the
   target process, check the setting of
   /proc/sys/kernel/yama/ptrace_scope, or try again as the root user.
   For more details, see /etc/sysctl.d/10-ptrace.conf

   To solve this long term: set ~kernel.yama.ptrace_scope = 0~ in ~/etc/sysctl.d/10-ptrace.conf~
   To solve this for this session: ~echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope~
** select specific syscall
   -e OPEN
* Tar
** Creating empty tar.gz :tar.gz:
   tar cfz config.tar.gz --files-from /dev/null
** Tarballing all of a directory's contents without the folder itself
   tar czf my_directory.tar.gz -C my_directory .

* Tags
  the program understand the syntax of C, Objective C, C++, Java,
  Fortran, Ada, Cobol, Erlang, Forth, HTML, LaTeX, Emacs
  Lisp/Common Lisp, Lua, Makefile, Pascal, Perl, PHP, PostScript,
  Python, Prolog, Scheme and most assembler-like syntaxes.
#+BEGIN_SRC sh
  find . -type f -name '*.py' | xargs etags
#+END_SRC
* Time
** Time string formatting                        :strftime:strptime:timezone:
ISO-8061:

| Directive | Meaning                                                                                                                                                                          | Example                                                                         | Notes    |
| %a        | Weekday as locale’s abbreviated name.                                                                                                                                            | Sun, Mon, ..., Sat (en_US);So, Mo, ..., Sa (de_DE)                              | (1)      |
| %A        | Weekday as locale’s full name.                                                                                                                                                   | Sunday, Monday, ..., Saturday (en_US);Sonntag, Montag, ..., Samstag (de_DE)     | (1)      |
| %w        | Weekday as a decimal number, where 0 is Sunday and 6 is Saturday.                                                                                                                | 0, 1, ..., 6                                                                    |          |
| %d        | Day of the month as a zero-padded decimal number.                                                                                                                                | 01, 02, ..., 31                                                                 |          |
| %b        | Month as locale’s abbreviated name.                                                                                                                                              | Jan, Feb, ..., Dec (en_US);Jan, Feb, ..., Dez (de_DE)                           | (1)      |
| %B        | Month as locale’s full name.                                                                                                                                                     | January, February, ..., December (en_US);Januar, Februar, ..., Dezember (de_DE) | (1)      |
| %m        | Month as a zero-padded decimal number.                                                                                                                                           | 01, 02, ..., 12                                                                 |          |
| %y        | Year without century as a zero-padded decimal number.                                                                                                                            | 00, 01, ..., 99                                                                 |          |
| %Y        | Year with century as a decimal number.                                                                                                                                           | 1970, 1988, 2001, 2013                                                          |          |
| %H        | Hour (24-hour clock) as a zero-padded decimal number.                                                                                                                            | 00, 01, ..., 23                                                                 |          |
| %I        | Hour (12-hour clock) as a zero-padded decimal number.                                                                                                                            | 01, 02, ..., 12                                                                 |          |
| %p        | Locale’s equivalent of either AM or PM.                                                                                                                                          | AM, PM (en_US);am, pm (de_DE)                                                   | (1), (2) |
| %M        | Minute as a zero-padded decimal number.                                                                                                                                          | 00, 01, ..., 59                                                                 |          |
| %S        | Second as a zero-padded decimal number.                                                                                                                                          | 00, 01, ..., 59                                                                 | (3)      |
| %f        | Microsecond as a decimal number, zero-padded on the left.                                                                                                                        | 000000, 000001, ..., 999999                                                     | (4)      |
| %z        | UTC offset in the form +HHMM or -HHMM (empty string if the the object is naive).                                                                                                 | (empty), +0000, -0400, +1030                                                    | (5)      |
| %Z        | Time zone name (empty string if the object is naive).                                                                                                                            | (empty), UTC, EST, CST                                                          |          |
| %j        | Day of the year as a zero-padded decimal number.                                                                                                                                 | 001, 002, ..., 366                                                              |          |
| %U        | Week number of the year (Sunday as the first day of the week) as a zero padded decimal number. All days in a new year preceding the first Sunday are considered to be in week 0. | 00, 01, ..., 53                                                                 | (6)      |
| %W        | Week number of the year (Monday as the first day of the week) as a decimal number. All days in a new year preceding the first Monday are considered to be in week 0.             | 00, 01, ..., 53                                                                 | (6)      |
| %c        | Locale’s appropriate date and time representation.                                                                                                                               | Tue Aug 16 21:30:00 1988 (en_US);Di 16 Aug 21:30:00 1988 (de_DE)                | (1)      |
| %x        | Locale’s appropriate date representation.                                                                                                                                        | 08/16/88 (None);08/16/1988 (en_US);16.08.1988 (de_DE)                           | (1)      |
| %X        | Locale’s appropriate time representation.                                                                                                                                        | 21:30:00 (en_US);21:30:00 (de_DE)                                               | (1)      |
| %%        | A literal '%' character.                                                                                                                                                         | %                                                                               |          |
* Wget
** Download a directory
  wget -r --no-parent --reject "index.html*" $IP -P $OUTDIR
* Users
** Add a new user
   useradd is low level
   probably use adduser instead
   --disabled-password prevents password login, e.g. to force pubkey auth
#+BEGIN_SRC sh
sudo adduser --home /home/$NEWUSER --shell /bin/bash --gecos "" --disabled-password $NEWUSER
#+END_SRC
* VLC
** Streaming a webcam
   https://wiki.videolan.org/Documentation:Streaming_HowTo/Advanced_Streaming_Using_the_Command_Line/
   v4l2 writes raw video, so it has to be transcoded
   vb is video bitrate
*** mp4v
   The codec mp4v works, but is horribly slow
#+BEGIN_SRC sh
  cvlc v4l2:///dev/video0 --sout '#transcode{vcodec=mp4v,vb=4096}:rtp{sdp=rtsp://@:8554/video.sdp}'
#+END_SRC
*** h264
    Also works, but again, requires transcoding, so it has the
    potential to be super slow. Pegs all four cores of a pi3
#+BEGIN_SRC sh
  cvlc v4l2:///dev/video0 --sout '#transcode{vcodec=h264,vb=1024}:rtp{sdp=rtsp://@:8554/video.sdp}'
#+END_SRC

* Xargs
** Specify the file to work on :{}:
   :NB -i implies -L1:
   xargs -i@ ls @
** Number of files
   xargs -L17
* X11
** Memory Leaks
   Q: https://unix.stackexchange.com/questions/6538/xorg-memory-leaks
   A: http://unix.stackexchange.com/a/9299/96718
   Some memory leaks in the X server are applications' faults; if they
   create server-side Pixmaps and don't clean up after themselves,
   they stick around forever. (This is intended to be a feature, so
   e.g. GNOME could install a set of standard Pixmaps once and then
   use them from any program by passing around their XIDs, as an
   optimization.) ~xrestop~ can be used to track these down.
** xorg
   :( if you're in here
*** What are these devices doing? :event:xev:
    Try running ~xev~
*** What hardware do I have :which:hardware:mouse:keyboard:
    lshal or xinput -test
*** Adjusting xorg config without writing config files
    xinput set-input-prop $DEVICE_NAME $OPTION $OPTION_VALUE
* zsh
** Iterate over letters
   * In bash, {a..z} works, but not in zsh
   * In zsh, if you `setopt braceccl`, you can do {a-z}
     Taken from: http://www.zsh.org/mla/users/2007/msg01198.html
   * {a..z} syntax will work as from version 5.0.5 (except it doesn't)
